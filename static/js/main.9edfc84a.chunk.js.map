{"version":3,"sources":["components/Cookie.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Cookie","props","a","Cookies","set","id","onClick","Button","get","alert","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAMO,SAASA,EAAOC,GAA4B,4CAC/C,sBAAAC,EAAA,uDACoB,IAAIC,KACZC,IAAI,OAAO,kBAFvB,4CAD+C,sBAe7C,OACI,oCACE,mKAGA,8BACI,wBAAQC,GAAG,SAASC,QArBgB,WAAD,oCAuBvC,uBACA,8BACI,cAACC,EAAA,EAAD,CAAQD,QAnBlB,YACkB,IAAIH,KACTK,IAAI,QACbC,MAAM,sBAGNA,MAAM,wBAaA,wCAEJ,mCACI,4BAAG,mBAAGC,KAAK,4CAAR,wBACH,4BAAG,mBAAGA,KAAK,yCAAR,iCACH,4BAAG,mBAAGA,KAAK,4CAAR,qC,MC3BJC,MANf,WACE,OACE,cAACX,EAAD,KCSWY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9edfc84a.chunk.js","sourcesContent":["import Cookies from \"universal-cookie\";\r\nimport Button from \"react-bootstrap/Button\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\ninterface noprops {\r\n\r\n}\r\nexport function Cookie(props: noprops): JSX.Element{\r\n    async function setCookie(): Promise<void>{\r\n        const cookies = new Cookies();\r\n        cookies.set(\"test\",\"this is a test\");\r\n      }\r\n    \r\n      function viewCookie(): void{\r\n        const cookies = new Cookies();\r\n        if(cookies.get(\"test\")){\r\n          alert(\"You have a cookie!\");\r\n        }\r\n        else{\r\n          alert(\"You are cookieless!\");\r\n        }\r\n      }\r\n      return (\r\n          <section>\r\n            <div>\r\n                Click this button to get a cookie! (This was created using the example in the readme of the universal-cookie github repository.)\r\n            </div>\r\n            <div>\r\n                <button id=\"cookie\" onClick = {setCookie}/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <Button onClick={viewCookie}>see if cookie is present</Button>\r\n            </div>\r\n            <footer>\r\n                <p><a href=\"https://lukerd-29-00.github.io/Portfolio/\">Homepage</a></p>\r\n                <p><a href=\"https://github.com/Lukerd-29-00/Bakery\">Bakery repository</a></p>\r\n                <p><a href=\"https://github.com/Lukerd-29-00/Portfolio\">Main repository</a></p>\r\n            </footer>\r\n          </section>\r\n \r\n      )\r\n\r\n\r\n\r\n}","import {Cookie} from \"./components/Cookie\"\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <Cookie />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}